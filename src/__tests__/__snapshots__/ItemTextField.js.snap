// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemTextField matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ItemTextField />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <label
        className="label-container"
        id={0}
      >
        <WithStyles(Tooltip)
          enterDelay={700}
          title="Complete Item"
        >
          <WithStyles(Checkbox)
            className="checkbox"
            onClick={[Function]}
          />
        </WithStyles(Tooltip)>
        <TextField
          fullWidth={true}
          id="item"
          label="Item"
          margin="dense"
          name="text"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          required={false}
          select={false}
          type="text"
          value=""
          variant="standard"
        />
        
      </label>,
      "className": "item-field-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Tooltip)
            enterDelay={700}
            title="Complete Item"
          >
            <WithStyles(Checkbox)
              className="checkbox"
              onClick={[Function]}
            />
          </WithStyles(Tooltip)>,
          <TextField
            fullWidth={true}
            id="item"
            label="Item"
            margin="dense"
            name="text"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            required={false}
            select={false}
            type="text"
            value=""
            variant="standard"
          />,
          "",
        ],
        "className": "label-container",
        "id": 0,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Checkbox)
              className="checkbox"
              onClick={[Function]}
            />,
            "enterDelay": 700,
            "title": "Complete Item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "checked": undefined,
              "className": "checkbox",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "fullWidth": true,
            "id": "item",
            "label": "Item",
            "margin": "dense",
            "name": "text",
            "onBlur": [Function],
            "onChange": [Function],
            "onKeyDown": [Function],
            "onKeyUp": [Function],
            "required": false,
            "select": false,
            "type": "text",
            "value": "",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "",
      ],
      "type": "label",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <label
          className="label-container"
          id={0}
        >
          <WithStyles(Tooltip)
            enterDelay={700}
            title="Complete Item"
          >
            <WithStyles(Checkbox)
              className="checkbox"
              onClick={[Function]}
            />
          </WithStyles(Tooltip)>
          <TextField
            fullWidth={true}
            id="item"
            label="Item"
            margin="dense"
            name="text"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            required={false}
            select={false}
            type="text"
            value=""
            variant="standard"
          />
          
        </label>,
        "className": "item-field-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Tooltip)
              enterDelay={700}
              title="Complete Item"
            >
              <WithStyles(Checkbox)
                className="checkbox"
                onClick={[Function]}
              />
            </WithStyles(Tooltip)>,
            <TextField
              fullWidth={true}
              id="item"
              label="Item"
              margin="dense"
              name="text"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              required={false}
              select={false}
              type="text"
              value=""
              variant="standard"
            />,
            "",
          ],
          "className": "label-container",
          "id": 0,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Checkbox)
                className="checkbox"
                onClick={[Function]}
              />,
              "enterDelay": 700,
              "title": "Complete Item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "checked": undefined,
                "className": "checkbox",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fullWidth": true,
              "id": "item",
              "label": "Item",
              "margin": "dense",
              "name": "text",
              "onBlur": [Function],
              "onChange": [Function],
              "onKeyDown": [Function],
              "onKeyUp": [Function],
              "required": false,
              "select": false,
              "type": "text",
              "value": "",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "",
        ],
        "type": "label",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
